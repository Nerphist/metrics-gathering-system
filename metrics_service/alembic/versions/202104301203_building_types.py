"""building_types

Revision ID: 5097696228ae
Revises: d89c543c4f2a
Create Date: 2021-04-30 12:03:28.984769

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '5097696228ae'
down_revision = 'd89c543c4f2a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('building_types',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.add_column('buildings', sa.Column('building_type_id', sa.Integer(), nullable=True))
    op.drop_index('ix_buildings_building_type', table_name='buildings')
    op.create_foreign_key(None, 'buildings', 'building_types', ['building_type_id'], ['id'], ondelete='CASCADE')
    op.drop_column('buildings', 'building_type')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('_sensor_meter_uc', 'meter_sensor_binding', ['sensor_id', 'meter_id'])
    op.create_unique_constraint('_coordinates_uc', 'locations', ['longitude', 'latitude'])
    op.create_unique_constraint('devices_secret_key_key', 'devices', ['secret_key'])
    op.create_unique_constraint('devices_recognition_key_key', 'devices', ['recognition_key'])
    op.add_column('buildings', sa.Column('building_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'buildings', type_='foreignkey')
    op.create_index('ix_buildings_building_type', 'buildings', ['building_type'], unique=False)
    op.drop_column('buildings', 'building_type_id')
    op.create_unique_constraint('_building_floor_number_uc', 'building_floors', ['number', 'building_id'])
    op.create_unique_constraint('_floor_room_name_uc', 'building_floor_rooms', ['name', 'floor_id'])
    op.drop_table('building_types')
    # ### end Alembic commands ###
