"""rooms

Revision ID: b3832690cb3c
Revises: 5097696228ae
Create Date: 2021-04-30 12:33:11.006085

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'b3832690cb3c'
down_revision = '5097696228ae'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('building_rooms',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=True),
                    sa.Column('building_id', sa.Integer(), nullable=True),
                    sa.Column('size', sa.Numeric(), nullable=True),
                    sa.Column('designation', sa.String(length=255), nullable=True),
                    sa.Column('responsible_department', sa.String(length=255), nullable=True),
                    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.drop_constraint('building_floor_rooms_floor_id_fkey', 'building_floor_rooms', type_='foreignkey')
    op.drop_table('building_floors')
    op.drop_constraint('devices_room_id_fkey', 'devices', type_='foreignkey')
    op.drop_table('building_floor_rooms')
    op.create_foreign_key(None, 'devices', 'building_rooms', ['room_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('_sensor_meter_uc', 'meter_sensor_binding', ['sensor_id', 'meter_id'])
    op.create_unique_constraint('_coordinates_uc', 'locations', ['longitude', 'latitude'])
    op.drop_constraint(None, 'devices', type_='foreignkey')
    op.create_foreign_key('devices_room_id_fkey', 'devices', 'building_floor_rooms', ['room_id'], ['id'])
    op.create_unique_constraint('devices_secret_key_key', 'devices', ['secret_key'])
    op.create_unique_constraint('devices_recognition_key_key', 'devices', ['recognition_key'])
    op.create_table('building_floor_rooms',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
                    sa.Column('floor_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['floor_id'], ['building_floors.id'],
                                            name='building_floor_rooms_floor_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='building_floor_rooms_pkey'),
                    sa.UniqueConstraint('name', 'floor_id', name='_floor_room_name_uc')
                    )
    op.create_table('building_floors',
                    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
                    sa.Column('number', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.Column('building_id', sa.INTEGER(), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['building_id'], ['buildings.id'], name='building_floors_building_id_fkey'),
                    sa.PrimaryKeyConstraint('id', name='building_floors_pkey'),
                    sa.UniqueConstraint('number', 'building_id', name='_building_floor_number_uc')
                    )
    op.drop_table('building_rooms')
    # ### end Alembic commands ###
